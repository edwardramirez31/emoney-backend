Description: project resources
Resources:
  # MyApiGW:
  #   Type: AWS::ApiGateway::RestApi
  #   Properties:
  #     Name: MyApiGW

  AccountsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:provider.environment.DYNAMODB_ACCOUNTS_TABLE}
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: tenantId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: tenantId
          KeyType: RANGE

  CategoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:provider.environment.DYNAMODB_CATEGORY_TABLE}
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: tenantId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: tenantId
          KeyType: RANGE

  GoalTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:provider.environment.DYNAMODB_GOAL_TABLE}
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: tenantId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: tenantId
          KeyType: RANGE

  TransactionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:provider.environment.DYNAMODB_TRANSACTION_TABLE}
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: tenantId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: tenantId
          KeyType: RANGE

  TransferTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:provider.environment.DYNAMODB_TRANSFER_TABLE}
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: tenantId
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: tenantId
          KeyType: RANGE

  # SNSRole:
  #   Type: 'AWS::IAM::Role'
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: 'Allow'
  #           Principal:
  #             Service:
  #               - 'cognito-idp.amazonaws.com'
  #           Action:
  #             - 'sts:AssumeRole'
  #     Policies:
  #       - PolicyName: 'CognitoSNSPolicy'
  #         PolicyDocument:
  #           Version: '2012-10-17'
  #           Statement:
  #             - Effect: 'Allow'
  #               Action: 'sns:publish'
  #               Resource: '*'

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: auth-pool
      UsernameAttributes:
        - email
      UserAttributeUpdateSettings:
        AttributesRequireVerificationBeforeUpdate:
          - email
          # - phone_number
      # SmsConfiguration:
      #   # ExternalId: !Sub ${AuthName}-external
      #   SnsCallerArn: !GetAtt SNSRole.Arn
      MfaConfiguration: 'OPTIONAL'
      EnabledMfas:
        - SOFTWARE_TOKEN_MFA
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: name
          AttributeDataType: String
          Required: false
          Mutable: true
        - Name: picture
          AttributeDataType: String
          Required: false
          Mutable: true
        - Name: phone_number
          AttributeDataType: String
          Required: false
          Mutable: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireSymbols: true
          RequireNumbers: true
          RequireUppercase: true
      AutoVerifiedAttributes: ['email']

  UserClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: user-pool-ui
      GenerateSecret: false
      UserPoolId: !Ref UserPool
      AccessTokenValidity: 30
      IdTokenValidity: 30
      RefreshTokenValidity: 1
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days

      ExplicitAuthFlows:
        - 'ADMIN_NO_SRP_AUTH'

  # Authorizer:
  #   Type: AWS::ApiGateway::Authorizer
  #   Properties:
  #     Type: COGNITO_USER_POOLS
  #     ProviderARNs:
  #       - !GetAtt UserPool.Arn
  #     IdentitySource: method.request.header.Authorization
  #     Name: PrivateAuthorizer
  #     RestApiId: !Ref MyApiGW

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.environment.TARGET_S3_BUCKET}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET, PUT]
            AllowedOrigins: ['*']
            Id: CORSRuleId1
            MaxAge: '3600'
# Outputs:
#   AuthorizerRef:
#     Value:
#       Ref: Authorizer
#     Export:
#       Name: authorizer-ref-${opt:stage, self:provider.stage, "dev"}

#   ApiGatewayRestApiId:
#     Value:
#       Ref: MyApiGW
#     Export:
#       Name: api-gateway-${opt:stage, self:provider.stage, "dev"}-rest-api-id

#   ApiGatewayRestApiRootResourceId:
#     Value:
#       Fn::GetAtt:
#         - MyApiGW
#         - RootResourceId
#     Export:
#       Name: api-gateway-${opt:stage, self:provider.stage, "dev"}-root-resource-id

# UserTableStreamParameter:
#   DeletionPolicy: Retain
#   Type: AWS::SSM::Parameter
#   DependsOn: AccountsTable
#   Properties:
#     Description: PRODUCTS_TABLE_STREAM_ARN
#     Name: ${self:service}-accounts-stream-${opt:stage, self:provider.stage, "dev"}
#     Type: String
#     Value: !GetAtt AccountsTable.StreamArn
